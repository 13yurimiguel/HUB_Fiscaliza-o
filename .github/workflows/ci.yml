name: CI

on:
  push:
    branches: ["main", "work", "develop"]
  pull_request:
    branches: ["*"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  web:
    name: Web app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
      - run: npm run lint -- --no-fix
      - run: npm test -- --runInBand

  api:
    name: Fiscaliza API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/fiscaliza-api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: services/fiscaliza-api/package-lock.json
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
      - run: npm run lint -- --no-fix
      - run: npm test -- --runInBand

  mobile:
    name: Mobile app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Install dependencies
        working-directory: mobile
        run: flutter pub get
      - name: Analyze
        working-directory: mobile
        run: flutter analyze
      - name: Run tests
        working-directory: mobile
        run: flutter test

  ai_assistant:
    name: AI assistant service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        working-directory: services/ai-assistant
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        working-directory: services/ai-assistant
        run: pytest

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform/environments/dev
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform fmt
        run: terraform fmt -check -recursive
      - name: Terraform init
        run: terraform init -backend=false
      - name: Terraform validate
        run: terraform validate
